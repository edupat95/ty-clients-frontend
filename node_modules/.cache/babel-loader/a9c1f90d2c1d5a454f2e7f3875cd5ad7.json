{"ast":null,"code":"import axios from 'axios';\nimport { createWorkerAdapter } from '../adapters/worker.adapter';\nimport { createClubAdapter } from '../adapters/club.adapter';\nconst API_URL = \"http://localhost:8080/api\";\n\nconst login = async (username, password) => {\n  //console.log(\"Lo que llega a services/login \" + username + \" - \" + password);\n  var data = JSON.stringify({\n    \"username\": username,\n    \"password\": password\n  });\n  let response = await axios.post(API_URL + '/authenticate', data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    //console.log(\"service/response->\" + JSON.stringify(response.status));\n    return response;\n  }).catch(function (error) {\n    return error;\n  });\n  let response2 = await axios.get(API_URL + '/account', {\n    headers: {\n      'Authorization': 'Bearer ' + response.data.id_token\n    }\n  }).then(function (response) {\n    //console.log(\"service->\" + JSON.stringify(response));\n    return response;\n  }).catch(function (error) {\n    console.error(\"Error al obtener datos del usuario. Type error -> \" + error.response.status);\n    return error.response.status;\n  });\n\n  if (response2) {\n    console.log(\"entra aca\" + response);\n\n    if (response === 401) {\n      return response;\n    } else {\n      return 0;\n    }\n  } else {\n    console.log(\"no existe\");\n    return 0;\n  }\n\n  console.log(\"DATOS OBJTENIDOS EN RESPONSE2 -> \" + JSON.stringify(response2.data));\n  let usuario;\n\n  if (response.status === 200 && response2.status === 200) {\n    const worker = await getWorkerByUser(response.data.id_token, response2.data.id);\n    console.log(\"DATOS DEL CLUB ->\" + createClubAdapter(worker.club).nombre);\n    const club = createClubAdapter(worker.club);\n    usuario = {\n      id_token: response.data.id_token,\n      id: response2.data.id,\n      login: response2.data.login,\n      firstName: response2.data.firstName,\n      lastName: response2.data.lastName,\n      email: response2.data.email,\n      imageUrl: response2.data.imageUrl,\n      activated: response2.data.activated,\n      langKey: response2.data.langKey,\n      club: club\n    };\n    return usuario;\n  }\n};\n\nconst getWorkerByUser = async (token, user_id) => {\n  //console.log(\"USER ID BUSCADO: \" + user_id)\n  let response = await axios.get(API_URL + '/trabajadors/user/' + user_id, {\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(function (response) {\n    //console.log(\"service->\" + JSON.stringify(response));\n    return response;\n  }).catch(function (error) {\n    console.error(\"Error al obtener datos del trabajador. Type error -> \" + error.response.status);\n    return error.response.status;\n  });\n  const worker = createWorkerAdapter(response.data);\n  console.log(\"Trabajador recuperador:\", JSON.stringify(response.data));\n  return worker;\n};\n\nexport { login };","map":{"version":3,"names":["axios","createWorkerAdapter","createClubAdapter","API_URL","login","username","password","data","JSON","stringify","response","post","headers","then","catch","error","response2","get","id_token","console","status","log","usuario","worker","getWorkerByUser","id","club","nombre","firstName","lastName","email","imageUrl","activated","langKey","token","user_id"],"sources":["/media/eduardo/DatosUbuntu/Universidad/TY Clients/ty-clients/frontend/ty-clients/src/services/public.service.ts"],"sourcesContent":["import { User } from '../models/user.model';\nimport axios from 'axios';\nimport { createWorkerAdapter } from '../adapters/worker.adapter';\nimport { Worker } from '../models/worker.model';\nimport { createClubAdapter } from '../adapters/club.adapter';\n\nconst API_URL: string = \"http://localhost:8080/api\";\n\nconst login = async (username:string, password:string) => {\n  //console.log(\"Lo que llega a services/login \" + username + \" - \" + password);\n  \n  var data = JSON.stringify({\n    \"username\": username,\n    \"password\": password\n  });\n\n  let response = await axios.post(API_URL +'/authenticate', data , { headers: {'Content-Type': 'application/json'} })\n  .then(function (response) {\n    //console.log(\"service/response->\" + JSON.stringify(response.status));\n    return response;\n  })\n  .catch(function (error) {\n    return error;\n  });\n\n\n  let response2 = await axios.get(API_URL + '/account', { headers: {'Authorization': 'Bearer ' + response.data.id_token}})\n  .then(function (response) {\n    //console.log(\"service->\" + JSON.stringify(response));\n    return response;\n  })\n  .catch(function (error) {\n    console.error(\"Error al obtener datos del usuario. Type error -> \" + error.response.status);\n    return error.response.status;\n  });\n\n\n  if(response2){\n    console.log(\"entra aca\" + response);\n    if(response === 401){\n      return response;\n    } else {\n      return 0;\n    }\n  } else {\n    console.log(\"no existe\");\n    return 0;\n  }\n  console.log(\"DATOS OBJTENIDOS EN RESPONSE2 -> \" + JSON.stringify(response2.data));\n  let usuario: User;\n   \n  \n  if((response.status === 200 && response2.status === 200)){\n    const worker = await getWorkerByUser(response.data.id_token, response2.data.id); \n    console.log(\"DATOS DEL CLUB ->\" + createClubAdapter(worker.club).nombre);\n    const club = createClubAdapter(worker.club);\n    usuario = {\n      id_token: response.data.id_token,\n      id: response2.data.id,\n      login: response2.data.login,\n      firstName: response2.data.firstName,\n      lastName: response2.data.lastName,\n      email: response2.data.email,\n      imageUrl: response2.data.imageUrl,\n      activated: response2.data.activated,\n      langKey: response2.data.langKey,\n      club: club\n    };\n\n    \n    \n\n    return usuario;\n  }\n\n};\n\nconst getWorkerByUser = async (token: string, user_id: number) => {\n  //console.log(\"USER ID BUSCADO: \" + user_id)\n  let response = await axios.get(API_URL + '/trabajadors/user/'+user_id, { headers: {'Authorization': 'Bearer ' + token}})\n  .then(function (response) {\n    //console.log(\"service->\" + JSON.stringify(response));\n    return response;\n  })\n  .catch(function (error) {\n    console.error(\"Error al obtener datos del trabajador. Type error -> \" + error.response.status);\n    return error.response.status;\n  });\n\n  const worker: Worker = createWorkerAdapter(response.data);\n\n  console.log(\"Trabajador recuperador:\", JSON.stringify(response.data));\n\n  return worker;\n}\nexport {login}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}